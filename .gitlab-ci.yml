include:
  - template: SAST.gitlab-ci.yml # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/Dependency-Scanning.gitlab-ci.yml

.default_rule: &default_rule
  if: '$CI_COMMIT_BRANCH =~ /^feature|^fix|^hotfix|^bugfix|^release|^snyk-fix/'

stages:
  - test
  - prepare
  - check
  - deploy

variables:
  AUTH_REDIS_URL: 'redis://e2e-test-redis:6379/0'
  DB_CACHE_REDIS_URL: 'redis://:redis@e2e-test-redis:6379/0'
  DB_HOST: 'e2e-test-db'
  DB_PORT: 5432
  DB_USERNAME: postgres
  DB_PASSWORD: pass
  DB_DATABASE: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: pass
  POSTGRES_DB: postgres
  PGDATA: /var/lib/postgresql/data/db-files/

install_back_dependencies:
  stage: prepare
  image: node:lts
  script:
    - cd back
    - yarn install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - back/node_modules/
  rules:
    - *default_rule
    - if: '$CI_COMMIT_BRANCH == "develop"' # setting fixed value `develop` -- could be set to a var: $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_TAG =~ /^v.+/'

check:test-back:
  stage: check
  image: node:lts
  services:
    - name: postgres:13.4
      alias: e2e-test-db
    - name: redis:5.0-alpine
      alias: e2e-test-redis
  script:
    - cd back
    - yarn migration:run
    - yarn test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - node_modules/
  rules:
    - *default_rule
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_TAG =~ /^v.+/'

check:lint-back:
  stage: check
  image: node:lts
  script:
    - cd back
    - yarn run lint
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - node_modules/
  rules:
    - *default_rule
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_TAG =~ /^v.+/'

deploy:back-prod:
  image: google/cloud-sdk:359.0.0-slim
  stage: deploy
  script:
    - apt-get update && apt-get install -yqq jq
    - export PACKAGE_VERSION=$(jq -r .version ./back/package.json | tr . -)
    - echo $SERVICE_ACCOUNT > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - cp "$ENV_VARIABLES_BACK_PROD" ./back/env_variables_prod.yaml
    - cp "$BETA_SETTINGS_BACK_PROD" ./back/beta_settings_prod.yaml
    - gcloud --project $PROJECT_ID app deploy ./back/app_prod.yaml --version $PACKAGE_VERSION -q --no-promote
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_TAG =~ /^v.+/'
